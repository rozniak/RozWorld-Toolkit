<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImgListItemIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImgListItemIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADU
        CAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCBIAAf8BfwG9AXcB1wFWAdcBVgE5AWMBnQFzAd4BewHeAXsB3gF7Ad4BewH/
        AX8B/wF/Af8BfxYAAf8BfwH/AX8B/wF/SgAB/wJ/AQYBWwEWARsBTwG8AS4BdQE+ARIBPgGxAS0BcAEl
        AdABNQF0AUoBWwFrAd4BewH/AX8QAAH/AX8B3gF7ARABQgEpASUBUgFKAXsBbwH/AX8WAAFgAU4uAAGd
        AWsBnwEKAfgBWgG9AXcBVgE2AboBDQF4ASEBmAEhAZkBJQG6ASkBdgEVAc0BDAF0AUoBvgF3Af8BfwoA
        Af8BfwF7AW8BawEtAdYBWgHWAVoB9wFeARgBYwFrAS0BzgE5AfcBXgH/AX8B/wF/BgABHwkAASABZwHz
        AX8sAAGdAW8BnwISAT4BOQESARUBDQH0AQQB0wEAAfIBAAHzAQQBFQEJATYBFQGZASEB0QEEAVMBRgHe
        AXsB/wF/BAAB/wF/ARgBYwFrAS0BewFvAXsBbwFaAWsBMQFGAVIBSgHWAVoB9wFeARgBYwFSAkoBKQGU
        AVIBHwUAAZMBAQEfAQABHwEAAR8DAAHAARgBIAFnAfMBfwIAAcABGAHAARgBgAExJAABvwEaAZQBDQHT
        AQAB0wEAAfQBAAEVAQEBggEFARQBAQH0AQAB0wEAAfQBBAFXARkBrwEEAfgBWgH/AX8B/wF/AVIBSgFS
        AUoBewFvAXsBbwFaAWsBOQFnATkBZwGUAVIBlAFSAYwBMQFKASkB1gFaAfcBXgEYAWMB7wE9AgABkwEB
        AR8DAAEsAX8IAAGAAU0B4AF/AewBfwHgAX8B4AF/AWYBTgGAATEiAAG9ASoBvgEiARUBAQE2AQEBVwEB
        AXgBAQHAAQEBoAEBAVcBAQE2AQEB9AEAAY4BHQGVASkBrwExAd4BewG1AVYBewFvAVoBawFaAWsBOQFn
        ATkBZwEYAWMBGAFjAXMBTgGUAVIBtQFWAe8BPQGMATEBCAEhAe8BPQHvAT0EAAEsAX8BLAF/AmYDAAFA
        ARABQgGAAX0EAAHzAX8B4AF/AcABMAEmAWckAAEbAU8B/wEuAVcBAQGZAQEBuQEBAQQBAgEAAQIB4AEB
        AZkBAQF4AQEBVgEBAYYBDQGOAR0BzgEMAZwBcwG1AVYBWgFrATkBZwE5AWcBGAFjARgBYwH3AV4B9wFe
        AdYBWgG1AVYB6QEtAW8BRgH3AV4BlAFSAc4BOQGMATEGAAEsAX8GAAEQAUIGAAHzAX8BwAEYAgABgAFN
        JAABmwEqAf8BMgEfATcB2wEBAfwBAQE2AQIBLgECAR0BAgH7AQEB5QEBAcABAQGAAQEBhwENARIBBQF8
        AW8B1gFaATkBZwEYAWMBGAFjAfcBXgH3AV4B1gFaAdYBWgG1AVYBlAFSAXMBTgH3AV4B9wFeASkBJQEx
        AUYBrQE1BgACZgEsAX8BLAF/ASwBfwYAAcABGAEmAWcB4AF/AQABQgEmAWcBwAEYIgABGwEGAZkBAQFf
        AUcBsAEeAVoBAgF3AQYBfwECAV8BAgE+AQIB+gEBAeABAQGjAQEBZwEBATIBBQGcAW8BMQFGAfcBXgH3
        AV4B1gFaAdYBWgG1AVYBtQFWAZQBUgGUAVIBlAFSATEBRgGUAVIB7wE9AZQBUgG1AVYBjAExBgABLAF/
        ASwBfwEsAX8BLAF/AgABsgFWBAABZgFOAfMBfwHzAX8BwAEYJAABuwEuAboBAQGYAR4BfwFTAeQBJgEF
        ASsBHwEvAd8BGgF/AQIBPgECAQMBAgHAAQEBgAEBAXEBCQGdAXMBMQFGAdYBWgHWAVoBtQFWAbUBVgGU
        AVIBlAFSAbUBVgE5AWcBtQFWAVIBSgEYAWMBEAFCATEBRgHvAT0BawEtBgABLAF/ASwBfwEsAX8BLAF/
        AgABsgFWMAABvgFzAdsBAQHEARoBfAFXAZ8BYwFKATsBKAE3AX8BQwHfARoBXwECASgBAgHkAQEBoAEB
        AfQBLQHeAXsBMQFGAbUBVgG1AVYBlAFSAZQBUgFaAWsBvQF3AXsBbwF7AW8BGAFjAWsBLQGUAVIBtQFW
        AXMBTgE5AWcBCAEhCAACZgEsAX8EAAEYAWMBsgFWMAABsgEaAeQBJgEnATcBvQFnAd8BbwH/AXcBvAFX
        Af8BJgF6AQIBHQECAQABAgHpAQEBWgFnAf8BfwEQAUIBlAFSAfcBXgG9AXcBvQF3Ab0BdwG9AXcBnAFz
        AZwBcwF7AW8BewFvAXsBbwEYAWMBawEtATEBRgG1AVYKAAJmASwBfzYAAf8BewHoASIB8gEmAZYBSwH/
        AXMB/wF/AWwBQwEFASsBXwECAfwBAQHYAQEBuAFKAVwBYwG+AXcB1gFaAd4BewH/AX8B/wF/Ad4BewHe
        AXsBvQF3Ab0BdwG9AXcBnAFzARgBYwEQAUIBewFvAf8BfxQAAbIBVgGyAVYyAAHeAXsB1QEaAfsBIgGU
        AU8BdgFDAb8BawHlASYBXAECAfwBAQG5AUIB3wF7ATwBWwGcAW8GAAE5AWcB1gFaAf8BfwHeAXsBlAFS
        ATkBZwH/AX8YAAHAARg8AAHcAToBnAEOAe8BJgF/AQIBHgEzAR8BOwF1AUYBWgFnAb0BcwG7ATYBnQFz
        KAABwAEYTAABXAFfAb0BKgG8AS4BfAFnAf8Bf2AAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEB
        BQABgBcAA/8CAAEHAf8BHwL/AwABAwH8AQcB/gE/AwABAQHwAQAB4AEfBAABwAIAAQECAAGABwABgAMA
        AYABQAIAAYADAALAAgABgAMAAYABQAIAAYADAAGAASECAAGABAABPwIAAYAEAAE/AgABwAQAAT8CAAHA
        AgABAwGAAT8CAAHgAQAB4AE/AYABHwIAAfgBAAL/AfABPwIAAf8B4AT/AgAL
</value>
  </data>
</root>