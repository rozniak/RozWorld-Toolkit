<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImgListItemIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImgListItemIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        EAAAAk1TRnQBSQFMAgEBBgEAARABAAEQAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEQBgABEBIAAf8BfwHeAnsBawFbAWcBfAFvAb0BdwH/AX8WAAH/AX8B3gF7AZUBUgFb
        AWtUAAG9AXcBFgE2AdkBIQHYASEBtgEhAbUBIQFWAT4BWwFrAf8BfxIAAd4BewHPATUB+QFeAUsBJVQA
        Af8BfwHfAXsBOwFjAR0BIgHZASEB1wEhAdcBIQG1ASEBuAFSAf8BfxAAAdcBWgHPATUBdQFOAVoBa1oA
        AVsBawEbASoB2AEhAdgBIQHZASEBtwEhAbUBIQH/AX8OAAG2AVYBEQE+ARoBYwFLASUKAAHdAXsBpQFV
        AaUBVQGlAVVKAAFbAWsBWgE2AdcBHQHZASEBtwEhAQABUQHWAWYOAAG2AVYBzwE1AZYBUgFbAWsIAAHd
        AXsBpQFVAQYBYgFMAX8BBgFiSgAB/wF/AToBZwHVASkBLQF2AcoBZQGFAVkBAQFJAb0BdwwAAbYBVgHP
        ATUB+AFaAUsBJQYAAd0BewGlAVUBBgFiAcgBcgFYAXMBWAFzTAAB3gF7AbIBbgE0AXsBjwFqAekBXQFB
        AlEBWgH/AX8KAAG2AVYBEQE+AVwBawFLASUEAAHdAXsBpQFVAQYBYgFMAX8BBgFiAd4Be1AAAXoBcwHz
        AXYB8gF2AU0BagFDAVUBaAFJAf8BfwoAATMBRgEzAUYB+QFaAUsBJQH/AX8B3QF7AaUBVQEGAWIBqAFy
        AVgBcwG8AXcB/wF/UAAB/wF/AfUBagHyAXYCbgEgAU0BJgE1Ab0BdwgAAVQBRgH4AVoBGwFjAZ4BcwF9
        AWsBSwElAaUBVQEGAWIBTAF/AQYBYgHeAXtWAAH/AX8BWAFzAQsBXgGTAV4BjQEtAe8BOQH/AX8EAAEz
        AUIB+AFaARsBYwEbAWMBGwFjAX0BawH7AV4BSwElAUwBfwEGAWIBFwFrXAAB3gF7AXwBawEYAWMBCAEh
        AZQBUgH/AX8CAAEzAUIBXAFnAVwBZwHeAX8B3gF/Ab8BdwH7AV4BSwElAbEBfwEGAWJgAAGcAXMBvQF3
        AXMBTgHnARwBOQFnAgABMwFCAVwBZwFaAWsBNAF3AXIBUgFaAWsBtwFWAUsBJQGUAX8BBgFiYAAB/wF/
        ATkBZwG9AXcB7wE9AUoBKQGcAXMBMwFCAVwBZwGuATUB8QFmAS8BSgFzAUoB2AFWAbYBVgFMAX8BBgFi
        YgAB/wF/ARgBYwG9AXcBjAExAXMBTgG9AXcBdQFOAfcBXgFQAU4B7QFBAdABNQHXAloBbwEGAWIBVwFz
        ZAABvQF3AVoBawGUAVIBWgFrAb0BdwFTAUoCAAFbAWsBdAFGAQ4BSgEpAWIBBgFiATYBc2gAAf8BfwHe
        AXsEAAFbAWsB+AFeATsBZwGcAXNWAAH/AX8BvQF3AdcBVgHXAVYBOQFjAZ0BcwHeAXsB3gF7Ad4BewHe
        AXsB/wF/Af8BfwH/AX8WAAH/AX8B/wF/Af8Bf0oAAf8CfwEGAVsBFgEbAU8BvAEuAXUBPgESAT4BsQEt
        AXABJQHQATUBdAFKAVsBawHeAXsB/wF/EAAB/wF/Ad4BewEQAUIBKQElAVIBSgF7AW8B/wF/JgABzwE5
        ASkBJQEqASUBKgElASoBJQFKASUBSgElASoBJQEqASUBKgElASoBJQEqASEIAAGdAWsBnwEKAfgBWgG9
        AXcBVgE2AboBDQF4ASEBmAEhAZkBJQG6ASkBdgEVAc0BDAF0AUoBvgF3Af8BfwoAAf8BfwF7AW8BawEt
        AdYBWgHWAVoB9wFeARgBYwFrAS0BzgE5AfcBXgH/AX8B/wF/AZQBbgGtAV0B7wFlBgABnAF3AYwBUQGM
        AVUBjAFZAc4BWQH/AX8IAAE7AWcB/wF/Af8BfwH/AX8B/wF7Af8BewH/AXsB/wF3Ad8BcwG/AWsBvwFr
        ASoBIQgAAZ0BbwGfAhIBPgE5ARIBFQENAfQBBAHTAQAB8gEAAfMBBAEVAQkBNgEVAZkBIQHRAQQBUwFG
        Ad4BewH/AX8EAAH/AX8BGAFjAWsBLQF7AW8BewFvAVoBawExAUYBUgFKAdYBWgH3AV4BGAFjAVICSgEp
        AZQBUgH/AX8BzgFpAf8BfwgAAVIBZgGMAVUBzgFZDAABOgFjAf8BfwG4AVIBuAFSAf8BfwG4AVIBuAFS
        AbgBUgG4AVIBuAFSAX8BZwEqASEKAAG/ARoBlAENAdMBAAHTAQAB9AEAARUBAQGCAQUBFAEBAfQBAAHT
        AQAB9AEEAVcBGQGvAQQB+AFaAf8BfwH/AX8BUgFKAVIBSgF7AW8BewFvAVoBawE5AWcBOQFnAZQBUgGU
        AVIBjAExAUoBKQHWAVoB9wFeARgBYwHvAT0CAAG1AXIBlAFuBgAB3gF7AYwBXQGMAVkBtQFmDAABOgFj
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B3wF3Ab8BcwG/AW8BnwFrAZ8BawEqASEKAAG9ASoBvgEiARUBAQE2
        AQEBVwEBAXgBAQHAAQEBoAEBAVcBAQE2AQEB9AEAAY4BHQGVASkBrwExAd4BewG1AVYBewFvAVoBawFa
        AWsBOQFnATkBZwEYAWMBGAFjAXMBTgGUAVIBtQFWAe8BPQGMATEBCAEhAe8BPQHvAT0CAAGcAXsBjAFp
        AVIBagExAWYBMQFqAc4BZQGMAWEBjAFVAd4BfwwAAToBYwH/AX8BuAFSAbgBUgH/AX8BuAFSAbgBUgG4
        AVIBuAFSAbgBUgGfAWsBKgEhCgABGwFPAf8BLgFXAQEBmQEBAbkBAQEEAQIBAAECAeABAQGZAQEBeAEB
        AVYBAQGGAQ0BjgEdAc4BDAGcAXMBtQFWAVoBawE5AWcBOQFnARgBYwEYAWMB9wFeAfcBXgHWAVoBtQFW
        AekBLQFvAUYB9wFeAZQBUgHOATkBjAExBAABUgFyAZwBewQAAe8BaQGMAWEBGAFvAb4BdwG8AVYB+QE9
        AfkBPQH5AT0BXAFKAV0BawEaAWMB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B3wF7Ad8BdwHfAXcBvwFv
        ASoBIQoAAZsBKgH/ATIBHwE3AdsBAQH8AQEBNgECAS4BAgEdAQIB+wEBAeUBAQHAAQEBgAEBAYcBDQES
        AQUBfAFvAdYBWgE5AWcBGAFjARgBYwH3AV4B9wFeAdYBWgHWAVoBtQFWAZQBUgFzAU4B9wFeAfcBXgEp
        ASUBMQFGAa0BNQQAAnsBcwFyAgABvQF7AYwBZQGMAWEBvQF7ARwBYwH5AT0EAAF6AU4B+QE9Ad4BewE6
        AWMB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8BtgFWAWgBOQF8AWsBvwFzASoBIQoAARsBBgGZAQEBXwFH
        AbABHgFaAQIBdwEGAX8BAgFfAQIBPgECAfoBAQHgAQEBowEBAWcBAQEyAQUBnAFvATEBRgH3AV4B9wFe
        AdYBWgHWAVoBtQFWAbUBVgGUAVIBlAFSAZQBUgExAUYBlAFSAe8BPQGUAVIBtQFWAYwBMQYAAc4BcQH/
        AX8B1gFyAYwBZQExAWoCAAGeAXMB+QE9AV0BawIAAdsBWgH5AT0B3gF7AToBYwH/AX8BvAF3AcsBQQGb
        AXMB/wF/ATgBZwGJATkBpQFqAUEBDAFrATEBdAFKBAABWAFjAYMBFQIAAbsBLgG6AQEBmAEeAX8BUwHk
        ASYBBQErAR8BLwHfARoBfwECAT4BAgEDAQIBwAEBAYABAQFxAQkBnQFzATEBRgHWAVoB1gFaAbUBVgG1
        AVYBlAFSAZQBUgG1AVYBOQFnAbUBVgFSAUoBGAFjARABQgExAUYB7wE9AWsBLQYAAfcBdgH3AXYBjAFt
        AYwBZQGcAXsEAAF9AW8B+QE9AfkBPQH5AT0B+QE9Ad4CewI+AVsBkQFWAVABcwGJATkBVAFGAYkBOQEM
        AW8BKgEtAUMBfwGCARgBAgEEAYABFAFJATEB6wEtASMBGgIAAb4BcwHbAQEBxAEaAXwBVwGfAWMBSgE7
        ASgBNwF/AUMB3wEaAV8BAgEoAQIB5AEBAaABAQH0AS0B3gF7ATEBRgG1AVYBtQFWAZQBUgGUAVIBWgFr
        Ab0BdwF7AW8BewFvARgBYwFrAS0BlAFSAbUBVgFzAU4BOQFnAQgBIQYAAf8BfwGtAXUBrQFxAe8BaQQA
        Af8BfwHeAXsEAAFaAUoB+QE9Ad4CewE+AR8BUwE8AV8BkQFWAZABewGJATkBLwFzAYoBMQGtAX8B6AEo
        AcYBbgFjAWYBQgFiAYIBRQGIASkBRQEeBAABsgEaAeQBJgEnATcBvQFnAd8BbwH/AXcBvAFXAf8BJgF6
        AQIBHQECAQABAgHpAQEBWgFnAf8BfwEQAUIBlAFSAfcBXgG9AXcBvQF3Ab0BdwG9AXcBnAFzAZwBcwF7
        AW8BewFvAXsBbwEYAWMBawEtATEBRgG1AVYIAAFzAXYBrQFxAXsBdwQAAf8BfwH5AT0BfQFvAb4BdwHb
        AVoBmgFSAd4CewE+AXsBPgF7AT4B+wFWAZEBVgGPAX8BCgFKAa0BfwHmASQBbQF7AUsBewEIAXcB5gF2
        AaIBdgFKAUYBZgEiBAAB/wF7AegBIgHyASYBlgFLAf8BcwH/AX8BbAFDAQUBKwFfAQIB/AEBAdgBAQG4
        AUoBXAFjAb4BdwHWAVoB3gF7Af8BfwH/AX8B3gF7Ad4BewG9AXcBvQF3Ab0BdwGcAXMBGAFjARABQgF7
        AW8B/wF/DAABvQF7AZQBdggAAX0BbwH5AT0B+QE9AfkBPQF9AW8KAAHeAXsB7AFFAa0BfwFrAVYBrQF/
        AY4BfwFtAXsBKgF7AQkBdwHkAX4BiwFSAagBKgYAAd4BewHVARoB+wEiAZQBTwF2AUMBvwFrAeUBJgFc
        AQIB/AEBAbkBQgHfAXsBPAFbAZwBbwYAATkBZwHWAVoB/wF/Ad4BewGUAVIBOQFnAf8BfzQAAVkBawG4
        AXsB7QFFAa0BfwGtAX8BrQF/AY4BfwFMAXsB6gFuAcoBRQFtAUYBMAFDCgAB3AE6AZwBDgHvASYBfwEC
        AR4BMwEfATsBdQFGAVoBZwG9AXMBuwE2AZ0Bc0YAAf8BfwHVAV4B8wFiAb0BdwGQAVoBUAFSAVABUgEv
        AU4BDgFKAcsBQQF6AW8BdwFjATEBSxYAAVwBXwG9ASoBvAEuAXwBZwH/AX9gAAFCAU0BPgcAAT4DAAEo
        AwABQAMAASADAAEBAQABAQYAAQEWAAP/AQABAQH/AcMB/wUAAX8BwwH/BQABPwHDAf8EAAHgAR8BwwHh
        BAAB8AEfAcMBwQQAAfABDwHDAYEEAAH4AQcBwwEDBAAB/AEHAcABAwQAAfwBBwGAAQ8EAAH+AQMBAAEf
        BAAB/wGBAQABPwQAAf8BwQEAAT8EAAH/AcABAAE/BAAB/wHgAQABPwQAAf8B8AEgAX8EAAH/AfkBhwH/
        BQABBwH/AR8E/wEAAQMB/AEHAv8BAAEPAQABAQHwAQABHAEPAQABDwIAAcABAAEeAT8BAAEPAYADAAGc
        AT8BAAEPAYADAAGAAT8BAAEPAYADAAHMAgABDwGAAwAByAEYAQABDwGAAwAB4AGIAQABDAGAAwAB4AHA
        AgABgAMAAeEBmAIAAcADAAHxAYACAAHAAgABAwHzAcEB8AEAAeABAAHgAT8C/wHwAQAB+AEABP8B4AEA
        Af8B4Ab/Cw==
</value>
  </data>
</root>